Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -1,14 +1,35 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
   <component name="ChangeListManager">
-    <list default="true" id="34d3fce7-12ea-4362-9aa7-049038e0918a" name="Changes" comment="" />
+    <list default="true" id="34d3fce7-12ea-4362-9aa7-049038e0918a" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/hw/Ex1.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Class" />
+      </list>
+    </option>
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="master" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
   </component>
   <component name="ProjectId" id="2MXc4FhbXE3lgR0YJwF49LXxZXq" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
@@ -16,12 +37,32 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
+  <component name="RunManager">
+    <configuration name="Ex1" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="org.example.hw.Ex1" />
+      <module name="semenar_java" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="org.example.hw.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Application.Ex1" />
+      </list>
+    </recent_temporary>
+  </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
Index: src/main/java/org/example/hw/Ex1.java
===================================================================
diff --git a/src/main/java/org/example/hw/Ex1.java b/src/main/java/org/example/hw/Ex1.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/org/example/hw/Ex1.java	
@@ -0,0 +1,22 @@
+package org.example.hw;
+
+import java.util.Arrays;
+import java.util.Scanner;
+
+public class Ex1 {
+    public static void main(String[] args) {
+        // дана строка, изменить порядок слов на противоположный, исключить пробелы с обоих концов.
+        String str = " aaa www   eee ddd  ".trim();
+        System.out.println(str);
+
+        String res = "".trim();
+        if(str.length() % 2 != 0) {
+            res = str.substring(str.length() / 2+1) + str.substring( str.length() / 2,str.length() / 2+1) + str.substring(0, str.length() / 2);
+
+        }
+        else{
+            res= str.substring(0, str.length() / 2) + str.substring(0, str.length() / 2);
+
+        }System.out.println(res.trim());
+    }
+}
